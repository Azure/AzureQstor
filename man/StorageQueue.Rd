% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/StorageQueue.R
\name{StorageQueue}
\alias{StorageQueue}
\title{R6 class representing an Azure storage queue}
\description{
R6 class representing an Azure storage queue

R6 class representing an Azure storage queue
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{endpoint}}{A queue endpoint object. This contains the account and authentication information for the queue.}

\item{\code{name}}{The name of the queue.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{StorageQueue$new()}}
\item \href{#method-create}{\code{StorageQueue$create()}}
\item \href{#method-delete}{\code{StorageQueue$delete()}}
\item \href{#method-clear}{\code{StorageQueue$clear()}}
\item \href{#method-get_message}{\code{StorageQueue$get_message()}}
\item \href{#method-get_messages}{\code{StorageQueue$get_messages()}}
\item \href{#method-peek_message}{\code{StorageQueue$peek_message()}}
\item \href{#method-peek_messages}{\code{StorageQueue$peek_messages()}}
\item \href{#method-pop_message}{\code{StorageQueue$pop_message()}}
\item \href{#method-pop_messages}{\code{StorageQueue$pop_messages()}}
\item \href{#method-put_message}{\code{StorageQueue$put_message()}}
\item \href{#method-clone}{\code{StorageQueue$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize the queue. Rather than calling this directly, you should use one of the \code{\link{storage_queue}}, \code{\link{list_storage_queues}} or \code{\link{create_storage_queue}} functions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageQueue$new(endpoint, name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{endpoint}}{An endpoint object.}

\item{\code{name}}{The name of the queue.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Initializing this R6 object does not touch the server. If a queue of the given name does not already exist, it has to be created by calling the \code{create} method.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-create"></a>}}
\if{latex}{\out{\hypertarget{method-create}{}}}
\subsection{Method \code{create()}}{
Creates a storage queue in Azure, using the storage endpoint and name stored in this R6 object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageQueue$create()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-delete"></a>}}
\if{latex}{\out{\hypertarget{method-delete}{}}}
\subsection{Method \code{delete()}}{
Deletes this storage queue in Azure.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageQueue$delete(confirm = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{confirm}}{Whether to ask for confirmation before deleting.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clear"></a>}}
\if{latex}{\out{\hypertarget{method-clear}{}}}
\subsection{Method \code{clear()}}{
Clears (deletes) all messages in this storage queue.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageQueue$clear()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_message"></a>}}
\if{latex}{\out{\hypertarget{method-get_message}{}}}
\subsection{Method \code{get_message()}}{
Reads a message from the front of the storage queue. The message is then marked as read, but must still be deleted manually.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageQueue$get_message()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new object of class \code{\link{QueueMessage}}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_messages"></a>}}
\if{latex}{\out{\hypertarget{method-get_messages}{}}}
\subsection{Method \code{get_messages()}}{
Reads several messages at once from the front of the storage queue. The messages are marked as read, but must still be deleted manually.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageQueue$get_messages(n = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n}}{How many messages to read. The maximum is 32.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of objects of class \code{\link{QueueMessage}}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-peek_message"></a>}}
\if{latex}{\out{\hypertarget{method-peek_message}{}}}
\subsection{Method \code{peek_message()}}{
Reads a message from the storage queue, but does not mark it as read.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageQueue$peek_message()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new object of class \code{\link{QueueMessage}}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-peek_messages"></a>}}
\if{latex}{\out{\hypertarget{method-peek_messages}{}}}
\subsection{Method \code{peek_messages()}}{
Reads several messages at once from the storage queue, without marking them as read.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageQueue$peek_messages(n = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n}}{How many messages to read. The maximum is 32.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of objects of class \code{\link{QueueMessage}}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-pop_message"></a>}}
\if{latex}{\out{\hypertarget{method-pop_message}{}}}
\subsection{Method \code{pop_message()}}{
Reads a message from the storage queue, and then deletes it.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageQueue$pop_message()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new object of class \code{\link{QueueMessage}}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-pop_messages"></a>}}
\if{latex}{\out{\hypertarget{method-pop_messages}{}}}
\subsection{Method \code{pop_messages()}}{
Reads several messages at once from the storage queue, and then deletes them.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageQueue$pop_messages(n = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n}}{How many messages to read. The maximum is 32.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of objects of class \code{\link{QueueMessage}}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-put_message"></a>}}
\if{latex}{\out{\hypertarget{method-put_message}{}}}
\subsection{Method \code{put_message()}}{
Writes a message to the back of the message queue.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageQueue$put_message(text, visibility_timeout = NULL, time_to_live = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{text}}{The message text, either a raw or character vector. If a raw vector, it is base64-encoded, and if a character vector, it is pasted into a single string before being sent to the queue.}

\item{\code{visibility_timeout}}{Optional visibility timeout after being read, in seconds.}

\item{\code{time_to_live}}{Optional message time-to-live, in seconds. The default is 7 days.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageQueue$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
